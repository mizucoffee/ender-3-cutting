import { JSDOM } from 'jsdom';
import { Path, toPoints } from 'svg-points'
// import parseSvgPath from 'svg-path-parser';
const bezier = require('simple-bezier')

var replaceBezier = require('svg-replace-bezier');
var {parseSVG, makeAbsolute} = require('svg-path-parser');
const svg = `<svg version="1.1" id="&#x30EC;&#x30A4;&#x30E4;&#x30FC;_1"
xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 130.394 796.535"
style="enable-background:new 0 0 130.394 796.535;" xml:space="preserve">
<path d="M63.166,117.953l-3.047-3.555l0.381-5.078c2.285-2.115,4.676-4.38,7.172-6.792c2.496-2.412,4.463-5.183,5.904-8.315
l-0.762-2.92l-2.158-0.762c-3.301,0-6.56,0.085-9.776,0.254c-3.218,0.17-6.519-0.549-9.902-2.158
c-2.116-2.285-4.443-4.463-6.982-6.538c-2.539-2.073-4.528-4.717-5.967-7.935c0.169-5.332,0.042-10.684-0.381-16.06
c-0.425-5.374-0.762-10.684-1.016-15.933l-1.143-1.65l0.508-1.396l1.523-1.016l0.254-1.523l2.031,0.762
c2.622-1.523,5.161-1.692,7.617-0.508l7.998,6.982l0.508,2.92l1.27,1.904c-0.254,3.555-0.402,7.089-0.444,10.601
c-0.044,3.513-0.783,7.046-2.222,10.601l1.777,1.016l-0.635,1.396l-0.889-1.904l-0.635,5.967c0.591,1.863,1.86,3.005,3.809,3.428
c4.824-0.337,9.668-0.063,14.536,0.825s9.795,2.138,14.791,3.745c0.59,1.523,1.732,2.539,3.428,3.047L93,91.928l-1.396,3.428
c-2.203,3.047-4.443,5.925-6.729,8.633c-2.285,2.709-5.037,5.164-8.252,7.363l-1.65,0.127
C71.418,114.44,67.483,116.598,63.166,117.953z"/>
<path d="M89.826,43.939c-4.316,0.593-8.551,0.805-12.695,0.635l1.65-0.127c-1.609-0.676-2.666-1.565-3.174-2.666L73.323,41.4
c-2.793-1.184-5.418-2.581-7.872-4.189c-2.456-1.607-4.824-3.301-7.109-5.078l-0.381,2.412l-1.904-2.158l0.635-1.143l-5.332-4.316
l-3.174-1.143l-7.363-10.41l2.158-1.65l1.523-0.254l-0.508-1.016l1.27-3.936l10.41,1.65l0.889-1.016l1.777,2.793l1.016-0.127
l10.792,5.078l1.016,1.016c1.438,0.254,2.367,1.186,2.793,2.793l3.174,2.158l1.904,0.508l1.65,1.65l3.174,1.27l3.301,1.016
c1.184,0,2.285,0.339,3.301,1.016c2.539,1.27,4.57,2.963,6.094,5.078l-1.016,0.508l0.381,2.158l1.904,1.523l-3.174,2.285
l-2.92-0.127l0.508,1.523L89.826,43.939z"/>
<polygon points="64.562,89.643 66.594,87.865 63.674,88.5 63.547,89.896 "/>
<path d="M64.562,205.043c-4.57-1.27-9.035-2.856-13.394-4.761c-4.36-1.904-8.315-4.761-11.87-8.569
c-6.433-7.278-10.918-15.361-13.457-24.248s-4.487-18.027-5.84-27.422l0.889-1.904l-1.143-3.809
c2.962,1.523,5.501,3.428,7.617,5.713c3.809,0.508,7.278,1.904,10.41,4.189c5.332,6.348,8.252,13.584,8.76,21.709
s3.555,15.234,9.141,21.328c2.793,2.456,6.009,4.233,9.648,5.332l8.506-8.506l2.158,1.143l2.285,5.713
c-0.426,4.062-1.822,7.744-4.189,11.045C71.037,203.52,67.864,204.535,64.562,205.043z"/>
<path d="M106.33,182.572c-4.57-3.301-8.252-7.363-11.045-12.188c-2.117-5.5-4.443-10.918-6.982-16.25
c0.762-1.016,1.904-1.523,3.428-1.523c4.57,0,8.547,1.396,11.934,4.189c1.523,3.301,2.855,6.645,3.998,10.029
c1.143,3.386,1.969,6.855,2.477,10.41l-1.143,4.697L106.33,182.572z"/>
<path d="M24.064,313.207l-1.396-0.635c-1.44-2.622-2.412-5.459-2.92-8.506c0.677-3.047,1.67-6.05,2.983-9.014
c1.312-2.962,2.222-6.136,2.729-9.521h1.904l1.65,2.158l2.285-0.254c2.114,2.37,3.428,4.951,3.936,7.744
c-1.777,2.624-3.005,5.522-3.682,8.696c-0.679,3.174-2.075,5.947-4.189,8.315L24.064,313.207z"/>
<path d="M53.771,250.111c-4.316-1.438-8.296-4.019-11.934-7.744c-1.777-1.523-3.64-3.088-5.586-4.697
c0-1.438-0.593-2.496-1.777-3.174c-1.694-1.946-3.005-4.062-3.936-6.348l0.381-2.158l-0.762-1.777l2.158-2.539
c3.555,2.878,7.49,3.979,11.807,3.301l1.396-0.381c3.892,0.254,7.7,0.254,11.426,0c3.301,0.254,6.517,1.079,9.649,2.476
c3.129,1.396,5.967,3.027,8.506,4.888l1.523,1.904l3.301,1.27c0.93,1.27,1.396,2.709,1.396,4.316l-1.396,2.92l-1.143,2.793
l0.254,1.396l-2.031,1.396c-4.57,1.186-9.48,1.777-14.727,1.777l-5.713-0.254L53.771,250.111z"/>
<path d="M66.213,313.207l-9.648-3.174l-3.555-3.936l-1.016-5.967l1.777-0.635l4.951,0.635l2.158-2.158
c0.931-4.231,1.523-8.716,1.777-13.457c-1.44-1.946-3.218-3.384-5.332-4.316c-1.948,0-3.599-0.423-4.951-1.27
c-2.878-3.892-5.417-7.954-7.617-12.188l2.539-1.27c3.555,2.285,7.319,4.062,11.299,5.332c3.978,1.27,7.49,3.472,10.538,6.602
c4.316,4.233,6.221,9.565,5.713,15.996c-0.68,4.995-1.863,9.733-3.555,14.219C70.104,309.906,68.412,311.769,66.213,313.207z"/>
<path d="M104.299,301.908c-3.219-1.606-5.504-3.978-6.855-7.109c-1.695-3.301-3.387-6.558-5.078-9.775
c-1.695-3.216-2.625-6.685-2.793-10.41c3.977,0.933,7.469,2.583,10.473,4.951c3.004,2.37,6.072,4.487,9.205,6.348l1.016,8.125
l-1.016,4.697h-1.904l-0.381,2.412L104.299,301.908z"/>
<path d="M64.562,400.17c-4.57-1.27-9.035-2.857-13.394-4.761c-4.36-1.904-8.315-4.761-11.87-8.569
c-6.433-7.278-10.918-15.361-13.457-24.248s-4.487-18.027-5.84-27.422l0.889-1.904l-1.143-3.809
c2.962,1.523,5.501,3.428,7.617,5.713c3.809,0.508,7.278,1.904,10.41,4.189c5.332,6.348,8.252,13.584,8.76,21.709
s3.555,15.234,9.141,21.328c2.793,2.456,6.009,4.233,9.648,5.332l8.506-8.506l2.158,1.143l2.285,5.713
c-0.426,4.062-1.822,7.744-4.189,11.045C71.037,398.646,67.864,399.663,64.562,400.17z"/>
<path d="M106.33,377.699c-4.57-3.301-8.252-7.363-11.045-12.188c-2.117-5.501-4.443-10.918-6.982-16.25
c0.762-1.016,1.904-1.523,3.428-1.523c4.57,0,8.547,1.396,11.934,4.189c1.523,3.301,2.855,6.646,3.998,10.029
c1.143,3.386,1.969,6.855,2.477,10.41l-1.143,4.697L106.33,377.699z"/>
<path d="M68.244,513.793c-3.218-0.677-6.433-1.438-9.649-2.285l-0.381-2.666l2.92-2.92c5.5,0.508,9.944-1.27,13.331-5.332
c3.469-3.892,5.668-8.421,6.602-13.584l-1.65-0.889c-3.727,2.964-7.936,5.059-12.633,6.284c-4.697,1.228-9.289,2.349-13.774,3.364
c-3.726-0.845-7.194-2.114-10.41-3.809c-3.047-3.13-4.697-6.644-4.951-10.537c0.677-2.793,1.777-5.501,3.301-8.125
c2.793-2.114,5.586-4.189,8.379-6.221c2.454-1.27,5.161-1.904,8.125-1.904l2.285,0.381l3.428-0.381
c2.962,0.425,5.967,1.06,9.014,1.904l1.396-0.635l0.635-3.301l-1.27-6.094l-2.031-0.381c-3.047,0.679-6.075,1.44-9.078,2.285
c-3.005,0.847-6.284,1.06-9.839,0.635c-4.995,0-9.775-0.55-14.346-1.65l-2.92,1.016c-1.101-1.099-2.329-1.733-3.682-1.904
c-4.741-1.777-9.185-3.851-13.33-6.221c-2.793-2.368-4.189-5.332-4.189-8.887l0.635-1.27l2.539-1.27L17.082,438
c0.169-1.523,0.931-2.158,2.285-1.904l1.27-0.635c3.724,1.44,7.744,2.222,12.061,2.349s8.548,0.529,12.695,1.206l21.329-1.396
c-1.101-4.062-2.203-7.827-3.301-11.299l2.285-0.381l0.254-1.27l2.667-0.381c3.301,0.679,6.135,2.412,8.506,5.205l4.316,6.855
c4.738-0.508,9.521-0.591,14.346-0.254l2.285-0.889l3.555-2.666c1.523,0.847,2.707,2.031,3.555,3.555v2.285l-0.381,3.174
l-4.189,3.682l-4.57,2.285c-2.625,1.354-5.332,2.456-8.125,3.301c-1.102,1.016-1.441,2.285-1.016,3.809l0.762,6.221
c-0.508,2.878-0.826,5.734-0.953,8.569c-0.127,2.837-0.488,5.566-1.078,8.188c2.367,4.062,3.555,8.591,3.555,13.584
c-0.848,3.047-2.031,6.052-3.555,9.014c-1.523,2.964-3.514,5.757-5.967,8.379l-0.889,0.889
C75.735,511.847,72.221,513.286,68.244,513.793z"/>
<path d="M59.738,482.69l10.538-9.014c-3.219-1.777-6.729-2.962-10.538-3.555c-3.386,1.44-6.855,3.047-10.41,4.824
c-0.847,1.016-1.143,2.412-0.889,4.189l1.65,3.047l4.951,1.27l3.555-0.762h1.143V482.69z"/>
<path d="M92.365,423.657l-2.031-2.158c-0.762-1.606-1.016-3.301-0.762-5.078l0.762-2.793l-0.381-1.396l4.443,1.396l0.762,2.793
l2.031,1.016l0.762,1.65c0,1.44-0.721,2.624-2.158,3.555L92.365,423.657z"/>
<path d="M105.569,423.657c-1.609-2.793-2.33-6.05-2.158-9.775l1.396-0.254c1.859,0.933,3.469,2.412,4.824,4.443l0.381,2.158
l-1.396,2.666L105.569,423.657z"/>
<path d="M87.414,605.707c-3.98-0.337-7.598-1.185-10.855-2.539c-3.258-1.353-6.242-3.384-8.949-6.094
c-1.863-3.13-2.71-6.602-2.54-10.41c0.762-3.892,1.967-7.573,3.618-11.045c1.65-3.47,3.447-7.319,5.396-11.553l-3.809-1.016
c-4.656,0.762-8.76,1.27-12.315,1.523l-5.078-0.381l-2.793,1.396c-3.301-1.099-6.475-2.539-9.521-4.316s-6.094-3.47-9.141-5.078
c-0.847-1.692-2.116-2.962-3.809-3.809l-5.967-4.062c-1.523-2.539-2.497-5.034-2.92-7.49l2.031-1.27l0.254-1.396l1.523-0.254
l1.396,0.762l0.889-2.158l1.016-0.254l1.904,0.381c2.285-0.591,4.739-0.845,7.363-0.762c3.13,1.101,6.431,1.65,9.902,1.65
c8.887,0,16.44-0.317,22.661-0.952s13.775-1.206,22.662-1.714l2.031,0.381l1.396-0.635c3.301,2.456,6.896,4.36,10.791,5.713
c0.508,1.608,1.396,2.666,2.666,3.174v2.412l-2.666,5.332c-2.539,1.862-5.227,3.472-8.062,4.824
c-2.836,1.354-5.648,2.964-8.441,4.824l-1.777,2.539c-2.539,3.386-5.123,6.94-7.744,10.664l-2.793,5.713l-3.428,5.332v2.285
l2.285,4.189c3.301,3.132,6.961,5.078,10.98,5.84s8.018,1.523,11.998,2.285l0.508,2.285l-1.143,2.158
C94.057,605.624,90.883,606.132,87.414,605.707z"/>
<path d="M85.891,686.069c-2.285-0.254-4.361-0.972-6.221-2.158c0-2.539,0.336-4.612,1.016-6.221c3.977-1.86,7.172-4.57,9.584-8.125
s4.635-7.065,6.666-10.537v-4.824c-4.57-1.185-9.268-1.904-14.092-2.158c-3.047,0.933-6.18,1.735-9.395,2.412l-0.381,1.396
l-3.682-1.65l-5.586,1.27l-0.381,1.396l-3.047-1.016c-2.539-4.57-5.332-8.97-8.379-13.203l-4.443-2.666
c-0.254-2.793-0.847-5.459-1.777-7.998l1.777-1.016l1.777-2.539l2.666-0.254l3.174,1.016l2.793,3.809
c8.294,0.254,16.459,0.783,24.502,1.587c8.039,0.806,15.529,3.408,22.471,7.808l1.016,1.396l2.412,1.396
c2.113,1.608,3.723,3.682,4.824,6.221v3.809c-1.355,4.57-2.965,8.994-4.824,13.267c-1.863,4.274-4.742,8.146-8.633,11.616
C95.58,683.149,90.969,685.138,85.891,686.069z"/>
<path d="M89.953,785.6l-5.205-1.143c-9.48-1.86-18.282-4.739-26.407-8.633c-8.125-3.892-15.7-9.014-22.725-15.361
c-3.218-3.301-4.741-7.236-4.57-11.807l2.793-5.205c2.708-2.031,5.161-4.399,7.363-7.109c4.231-3.724,8.548-7.065,12.949-10.029
c4.399-2.962,8.716-6.177,12.95-9.648l1.143-1.523c3.723-2.876,7.953-4.697,12.695-5.459c1.016,1.187,2.285,1.567,3.809,1.143
l4.57,5.84l1.904,1.016c2.707,4.062,4.316,8.55,4.824,13.457c-2.793,2.456-5.947,3.999-9.459,4.634s-6.75,2.053-9.711,4.253
l-8.633,7.49l-7.491,5.84c-2.456,2.031-3.853,4.528-4.189,7.49c6.771,3.64,13.52,7.385,20.249,11.235
c6.729,3.853,13.902,6.623,21.52,8.315l0.254,2.285C96.129,784.204,93.254,785.177,89.953,785.6z"/>
</svg>



`

// const svg = `<svg viewBox="0 0 2520 280" version="1.1" xmlns="http://www.w3.org/2000/svg">
// <g id="m">
//   <g id="m1" class="vartical"><rect x="50" y="0" width="50" height="280"/></g>
//   <g id="m2" class="horizontal"><rect x="0" y="50" width="300" height="50"/></g>
//   <g id="m3" class="vartical"><rect x="150" y="50" width="50" height="230"/></g>
//   <g id="m4" class="vartical"><rect x="250" y="50" width="50" height="230"/></g>
// </g>
// <g id="i">
//   <g id="i1" class="vartical"><rect x="330" y="50" width="50" height="230"/></g>
// </g>
// <g id="z">
//   <g id="z1" class="horizontal"><rect x="410" y="50" width="250" height="50"/></g>
//   <g id="z2" class="horizontal"><rect x="460" y="140" width="150" height="50"/></g>
//   <g id="z3" class="horizontal"><rect x="410" y="230" width="250" height="50"/></g>
// </g>
// <g id="u">
//   <g id="u1" class="vartical"><rect x="690" y="50" width="50" height="230"/></g>
//   <g id="u2" class="horizontal"><rect x="690" y="230" width="230" height="50"/></g>
//   <g id="u3" class="vartical"><rect x="870" y="50" width="50" height="230"/></g>
// </g>
// <g id="dot" class="vartical"><rect x="950" y="230" width="50" height="50"/></g>
// <g id="c">
//   <g id="c1" class="horizontal"><rect x="1030" y="50" width="230" height="50"/></g>
//   <g id="c2" class="vartical"><rect x="1030" y="50" width="50" height="230"/></g>
//   <g id="c3" class="horizontal"><rect x="1030" y="230" width="230" height="50"/></g>
// </g>
// <g id="o">
//   <g id="o1" class="horizontal"><rect x="1290" y="50" width="230" height="50"/></g>
//   <g id="o2" class="vartical"><rect x="1290" y="50" width="50" height="230"/></g>
//   <g id="o3" class="horizontal"><rect x="1290" y="230" width="230" height="50"/></g>
//   <g id="o3" class="vartical"><rect x="1470" y="50" width="50" height="230"/></g>
//   <g id="o3" class="vartical"><rect x="1380" y="140" width="50" height="50"/></g>
// </g>
// <g id="f1">
//   <g id="f11" class="horizontal"><rect x="1600" y="50" width="150" height="50"/></g>
//   <g id="f12" class="vartical"><rect x="1600" y="50" width="50" height="230"/></g>
//   <g id="f13" class="horizontal"><rect x="1550" y="140" width="200" height="50"/></g>
// </g>
// <g id="f2">
//   <g id="f21" class="horizontal"><rect x="1830" y="50" width="150" height="50"/></g>
//   <g id="f22" class="vartical"><rect x="1830" y="50" width="50" height="230"/></g>
//   <g id="f23" class="horizontal"><rect x="1780" y="140" width="200" height="50"/></g>
// </g>
// <g id="e1">
//   <g id="e11" class="horizontal"><rect x="2010" y="50" width="230" height="50"/></g>
//   <g id="e12" class="horizontal"><rect x="2010" y="140" width="230" height="50"/></g>
//   <g id="e13" class="horizontal"><rect x="2010" y="230" width="230" height="50"/></g>
//   <g id="e14" class="vartical"><rect x="2010" y="50" width="50" height="230"/></g>
//   <g id="e15" class="vartical"><rect x="2190" y="50" width="50" height="140"/></g>
// </g>
// <g id="e2">
//   <g id="e21" class="horizontal"><rect x="2290" y="50" width="230" height="50"/></g>
//   <g id="e22" class="horizontal"><rect x="2290" y="140" width="230" height="50"/></g>
//   <g id="e23" class="horizontal"><rect x="2290" y="230" width="230" height="50"/></g>
//   <g id="e24" class="vartical"><rect x="2290" y="50" width="50" height="230"/></g>
//   <g id="e25" class="vartical"><rect x="2470" y="50" width="50" height="140"/></g>
// </g>
// </svg>`

const jsdom = new JSDOM()

const parser = new jsdom.window.DOMParser();
const dom = parser.parseFromString( svg, 'image/svg+xml' );
 
const pathList = dom.querySelectorAll( 'path' );

const result: any[] = []
pathList.forEach( path => {
  const data = makeAbsolute(parseSVG(path.getAttribute('d'))) as any[]

  let tmp: any[] = []

  data.forEach((d: any) => {
    // console.log(d.code)
    switch (d.code) {
      case 'M':
        if(tmp.length != 0) {
          result.push(tmp)
          tmp = []
        }
        tmp.push([d.x, d.y]);
        break
      case 'C':
        bezier([[d.x0, d.y0], [d.x1, d.y1], [d.x2, d.y2], [d.x, d.y]], 8).forEach((d: any) => {
          tmp.push(d)
        })
        break
      case 'L':
        tmp.push([d.x, d.y])
        break
      case 'H':
        tmp.push([d.x, d.y])
        break
      case 'V':
        tmp.push([d.x, d.y])
        break
      case 'Z':
        // tmp.push([d.x, d.y])
        result.push(tmp)
        tmp = []
        break
      default:
        tmp.push([d.x, d.y])
        break
    }
  })
  result.push(tmp)
})
const polygonList = dom.querySelectorAll( 'polygon' );
polygonList.forEach( polygon => {
  const data = polygon.getAttribute('points')?.split(' ').filter(a => a).map(d => [Number(d.split(',')[0]), Number(d.split(',')[1])])
  data?.push(data[0])
  result.push(data)
})
const rectList = dom.querySelectorAll( 'rect' );
rectList.forEach( polygon => {
  const x = Number(polygon.getAttribute('x'))
  const y = Number(polygon.getAttribute('y'))
  const x2 = x + Number(polygon.getAttribute('width'))
  const y2 = y + Number(polygon.getAttribute('height'))
  result.push([
    [x, y],
    [x, y2],
    [x2, y2],
    [x2, y],
    [x, y],
  ])
})

// console.log("const data = ")
console.log(JSON.stringify(result.filter(d => d.length > 0)))


 
